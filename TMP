	type variable = {vname: string; vpos: y}
	type variables = {length: float; v: variable list;}
	type out_point= {ox: float; oy: float; oname: string;}
	type in_point = {ix: float; iy: float; iname: string;}
	type b = {	inL: in_point list;
				(*	outL :
					Si boite != Empty, out_point est une entr√©e de la boite
					tel que dans boite.inL il existe in_point.iname = out_point.oname
				*)
				outL: (out_point, boite) list;
				nom: string;
				taille: (int*int);
	}
	and boite = |Empty |B of b
	type ref = {	res: string;
					fathers: (string list) list;
					tmp_expr: (signal_expression*boite)list;
					instances: boite list;
					assigns: boite list;
				}
